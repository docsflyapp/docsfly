name: Release Stable

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

concurrency:
  group: release-stable
  cancel-in-progress: true

jobs:
  release-docsfly-stable:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    env:
      NPM_CONFIG_PROVENANCE: true
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for changes in docsfly package
        id: changes
        run: |
          # Get the latest stable tag
          LATEST_TAG=$(git tag -l "v*" --sort=-version:refname | head -n 2 | tail -n 1)
          
          if [ -z "$LATEST_TAG" ]; then
            echo "No previous stable tag found, will publish"
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "Latest tag: $LATEST_TAG"
            # Check if there are changes in packages/docsfly since the last tag
            CHANGES=$(git diff --name-only $LATEST_TAG HEAD -- packages/docsfly/)
            if [ -n "$CHANGES" ]; then
              echo "Changes detected in packages/docsfly:"
              echo "$CHANGES"
              echo "changed=true" >> $GITHUB_OUTPUT
            else
              echo "No changes in packages/docsfly since $LATEST_TAG"
              echo "changed=false" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Extract version from tag
        if: steps.changes.outputs.changed == 'true'
        id: version
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$TAG_VERSION" >> $GITHUB_OUTPUT

      - name: Setup Bun
        if: steps.changes.outputs.changed == 'true'
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        if: steps.changes.outputs.changed == 'true'
        run: bun install

      - name: Run tests
        if: steps.changes.outputs.changed == 'true'
        run: bun run test

      - name: Build packages
        if: steps.changes.outputs.changed == 'true'
        run: bun run build

      - name: Publish to npm (stable)
        if: steps.changes.outputs.changed == 'true'
        run: |
          echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > ~/.npmrc
          
          # Publish docsfly
          cd packages/docsfly
          npm publish --tag latest
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.changes.outputs.changed == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: docsfly ${{ steps.version.outputs.version }}
          body: |
            ## Changes in this release

            See [CHANGELOG.md](./CHANGELOG.md) for details.
            
            ## Published package
            
            - `docsfly@${{ steps.version.outputs.version }}`
          draft: false
          prerelease: false

  release-create-docsfly-app-stable:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    env:
      NPM_CONFIG_PROVENANCE: true
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for changes in create-docsfly-app package
        id: changes
        run: |
          # Get the latest stable tag
          LATEST_TAG=$(git tag -l "v*" --sort=-version:refname | head -n 2 | tail -n 1)
          
          if [ -z "$LATEST_TAG" ]; then
            echo "No previous stable tag found, will publish"
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "Latest tag: $LATEST_TAG"
            # Check if there are changes in packages/create-docsfly-app since the last tag
            CHANGES=$(git diff --name-only $LATEST_TAG HEAD -- packages/create-docsfly-app/)
            if [ -n "$CHANGES" ]; then
              echo "Changes detected in packages/create-docsfly-app:"
              echo "$CHANGES"
              echo "changed=true" >> $GITHUB_OUTPUT
            else
              echo "No changes in packages/create-docsfly-app since $LATEST_TAG"
              echo "changed=false" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Extract version from tag
        if: steps.changes.outputs.changed == 'true'
        id: version
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$TAG_VERSION" >> $GITHUB_OUTPUT

      - name: Setup Bun
        if: steps.changes.outputs.changed == 'true'
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        if: steps.changes.outputs.changed == 'true'
        run: bun install

      - name: Run tests
        if: steps.changes.outputs.changed == 'true'
        run: bun run test

      - name: Build packages
        if: steps.changes.outputs.changed == 'true'
        run: bun run build

      - name: Publish to npm (stable)
        if: steps.changes.outputs.changed == 'true'
        run: |
          echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > ~/.npmrc
          
          # Publish create-docsfly-app
          cd packages/create-docsfly-app
          npm publish --tag latest
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.changes.outputs.changed == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: create-docsfly-app ${{ steps.version.outputs.version }}
          body: |
            ## Changes in this release

            See [CHANGELOG.md](./CHANGELOG.md) for details.
            
            ## Published package
            
            - `create-docsfly-app@${{ steps.version.outputs.version }}`
          draft: false
          prerelease: false